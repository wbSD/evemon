<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="IconPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>